# Imports the Google Cloud client library
from google.cloud import language
from google.cloud.language import enums
from google.cloud.language import types
import pandas as pd
import json
import sys
# Instantiates a client
client = language.LanguageServiceClient()

# The text to analyze
text = u'''–ë–µ—Ä—ë–º –≥—Ä—É—Å—Ç–Ω—É—é –ù–∞—Ç–∞—à–∫—É, –°–ø—Ä–∞—à–∏–≤–∞–µ–º —á—Ç–æ —Å–ª—É—á–∏–ª–æ—Å—å, –ï—Å–ª–∏ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç, –º–æ–∂–Ω–æ —á—É—Ç—å-—á—É—Ç—å –Ω–∞–¥–∞–≤–∏—Ç—å –Ω–∞ –¥–æ–≤–µ—Ä–∏–µ : \"—Å–æ–ª–Ω—ã—à–∫–æ, —Ç—ã –∂–µ –∑–Ω–∞–µ—à—å, 
—á—Ç–æ —Ç—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—à—å –≤—Å–µ –º–Ω–µ —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å. –Ø —Ç–µ–±—è –≤—ã—Å–ª—É—à–∞—é –∏ –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –ø–æ–º–æ—á—å\"
–î–≤–∞ –≤–∞—Ä–∏–∞–Ω—Ç–∞ 
1. –ü–æ—Å–ª–µ —ç—Ç–æ–π —Ñ—Ä–∞–∑—ã —Å–¥–∞—ë—Ç—Å—è –∏ —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–µ—Ç (–ø–æ—Ç–æ–º—É —á—Ç–æ —ç—Ç–æ –æ—á–µ–Ω—å –º–∏–ª–æ –∏ –∑–∞–±–æ—Ç–ª–∏–≤–æ) 
2. –ù–µ —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–µ—Ç (–ø—Ä–æ—Å—Ç–æ –≤—Ä–µ–¥–Ω–∏—á–∞–µ—Ç). –ú–æ–∂–Ω–æ –ª–∞—Å–∫–æ–≤–æ —Å–∫–∞–∑–∞—Ç—å \" –≤—Ä–µ–¥–Ω—é–ª—å–∫–∞ –º–æ—è, –Ω–µ —Ö–æ—á–µ—à—å –Ω–µ —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–π üòõ\".  –í—Å–µ —Ä–∞–≤–Ω–æ —Å–¥–∞—Ç—å—Å—è –∏ —Ä–∞—Å—Å–∫–∞–∂–µ—Ç
'''
document = types.Document(
    content=text,
    language="ru",
    type=enums.Document.Type.PLAIN_TEXT)
response = client.analyze_entities(
    document=document,
    encoding_type="UTF32"
)

# Detects the sentiment of the text
#sentiment = client.analyze_sentiment(document=document).document_sentimentse
for entity in response.entities:
    print("++" * 20)
    print("name {0}".format(entity.name))
    print("type {0}".format(entity.type))
    print("metadata {0}".format(entity.metadata))
    print("salience {0}".format(entity.salience))



#print('Text: {}'.format(text))
#print('Sentiment: {}, {}'.format(sentiment.score, sentiment.magnitude))



# def main(iS, oS):
#     listOfObjects = list()
#     df = pd.read_excel(iS).T
#     df = df.fillna("")
#     for i in df:
#         tmp = {
#             "Name" : df[i]['–ù–∞–∑–≤–∞–Ω–∏–µ'],
#             "Author" : df[i]['–ê–≤—Ç–æ—Ä'],
#             "Cost" : df[i]['–†–æ–∑–Ω.—Ü–µ–Ω–∞'] and 0,
#             "Photo" : df[i]['–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ'],
#             "Publish" : df[i]['–ò–∑–¥–∞—Ç–µ–ª—å—Å—Ç–≤–æ'],
#             "Date" : str(df[i]['–î–∞—Ç–∞ –ø–æ—Å—Ç.']),
#             "FullName" : df[i]['–ü–æ–ª–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ'],
#             "Sheets" : df[i]['–°—Ç—Ä–∞–Ω–∏—Ü'] and 0,
#             "ISBN" : df[i]['ISBN'],
#             "Topic" : df[i]["–¢–µ–º–∞"],
#             "Code" : df[i]["–®—Ç—Ä–∏—Ö–∫–æ–¥"] and 0,
#             "Series" : df[i]["–°–µ—Ä–∏—è"] and 0,
#             "Description" : df[i]["–û–ø–∏—Å–∞–Ω–∏–µ"]
#         }
#         listOfObjects.append(tmp)
#     with open(oS, "w", encoding='utf-8') as fout:
#         json.dump(listOfObjects, fout, ensure_ascii=False, allow_nan=False )

def addNotation(df):
    for i in df.T:
        



if __name__ == "__main__":
    iS = "priceext.xls"
    oS = "exmo_books.json"
    if (len(sys.argv) == 3):
        iS = sys.argv[1]
        oS = sys.argv[2]
    listOfObjects = list()
    df = pd.read_excel(iS)
    df = df.fillna(a)
    df = df + addNotation(df)